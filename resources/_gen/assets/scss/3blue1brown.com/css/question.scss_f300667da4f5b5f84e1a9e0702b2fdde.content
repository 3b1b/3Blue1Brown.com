.question {
  margin: 40px 0;
  text-align: left; }
  .question:first-child {
    margin-top: 0; }
  .question:last-child {
    margin-bottom: 0; }
  .question .question_text {
    font-weight: 600;
    font-style: italic; }
  .question .question_choices {
    margin: 20px 0; }
    .question .question_choices .question_choice {
      position: relative;
      display: flex;
      align-items: center;
      background: none;
      transition: background 0.2s ease;
      cursor: pointer; }
      .question .question_choices .question_choice:hover {
        background: #b3e5fc; }
      .question .question_choices .question_choice input {
        opacity: 0;
        position: absolute;
        z-index: -2; }
      .question .question_choices .question_choice .radio {
        padding: 10px;
        width: 40px;
        height: 40px;
        border-radius: 100%;
        flex-shrink: 0;
        transition: background 0.2s ease; }
      .question .question_choices .question_choice input:focus-visible + .radio {
        background: #eeeeee; }
      .question .question_choices .question_choice input + .radio:after {
        content: "";
        display: block;
        width: 100%;
        height: 100%;
        background: url("{{ `/images/icons/radio-unchecked.svg` | relURL }}"); }
      .question .question_choices .question_choice input:checked + .radio:after {
        background: url("{{ `/images/icons/radio-checked.svg` | relURL }}"); }
      .question .question_choices .question_choice .question_choice_text {
        padding: 10px;
        flex-grow: 1; }
      .question .question_choices .question_choice .question_choice_icon {
        display: none;
        justify-content: center;
        align-items: center;
        width: 40px;
        height: 40px;
        flex-shrink: 0;
        color: #4caf50; }
    .question .question_choices mjx-container {
      display: inline !important; }
  .question .question_result {
    display: none;
    align-items: center;
    font-family: "Poppins", sans-serif; }
    .question .question_result > span {
      padding: 5px 10px; }
  .question:not([data-reveal]) .question_unanswered {
    display: flex; }
  .question[data-reveal="false"] .question_incorrect {
    display: flex; }
  .question[data-reveal="true"] .question_correct {
    display: flex; }
  .question[data-reveal="true"] .question_choice[data-correct="true"] {
    background: #c8e6c9; }
    .question[data-reveal="true"] .question_choice[data-correct="true"] .question_choice_icon {
      display: flex; }
